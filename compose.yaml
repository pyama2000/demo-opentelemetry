services:
  item-service:
    container_name: item-service
    build:
      context: ./service/item-service
      dockerfile: ./build/docker/Dockerfile
    environment:
      - ITEM_SERVICE_PORT
    ports:
      - "${ITEM_SERVICE_PORT}:${ITEM_SERVICE_PORT}"
    healthcheck:
      test: ["CMD", "/usr/bin/wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:${ITEM_SERVICE_PORT}/healthz"]
      interval: 10s
      timeout: 10s
      retries: 3
    depends_on:
      opentelemetry-collector:
        condition: service_started
  opentelemetry-collector:
    image: otel/opentelemetry-collector-contrib:0.79.0
    container_name: opentelemetry-collector
    restart: always
    command: ["--config=/etc/config.yaml"]
    volumes:
      - ./config/opentelemetry-collector/config.yaml:/etc/config.yaml
    ports:
      - "9464:9464" # Prometheus exporter
      - "8888:8888" # OpenTelemetry metrics
  prometheus:
    image: prom/prometheus:v2.44.0
    container_name: prometheus
    command:
      - --web.console.templates=/etc/prometheus/consoles
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --storage.tsdb.retention.time=1h
      - --config.file=/etc/prometheus/config.yaml
      - --storage.tsdb.path=/prometheus
      - --web.enable-lifecycle
      - --web.route-prefix=/
      - --enable-feature=exemplar-storage
    volumes:
      - ./config/prometheus/config.yaml:/etc/prometheus/config.yaml
    ports:
      - "${PROMETHEUS_PORT}:9090"
  jaeger:
    image: jaegertracing/all-in-one:1.46.0
    container_name: jaeger
    command:
      - "--memory.max-traces"
      - "10000"
      - "--query.base-path"
      - "/jaeger/ui"
    ports:
      - "${JAEGER_PORT}:${JAEGER_PORT}"
      - "4317"
